{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCnBA,eAGA,oBAAyBQ,GAExBC,QAAQC,IAAI,sEAIZ,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,sCAAsCC,UACtF,MAAMC,EAAeJ,EAAOK,UAAUC,mBAAmB,GAAGC,IAC5D,IAAKH,EACJ,OAAOJ,EAAOQ,OAAOC,iBAAiB,mCAGtC,MAAMC,EAAUV,EAAOW,IAAIC,SAASR,EAAc,SACnDJ,EAAOK,UAAUQ,GAAGC,gBAAgBJ,GAEpC,MAAMK,EAAO,IAAIC,KACXC,EAAgB,CACrBF,EAAKG,eACJ,KAAOH,EAAKI,WAAa,IAAIC,OAAO,IACpC,IAAML,EAAKM,WAAWD,OAAO,IAC7BE,KAAK,KAEDC,EAAWvB,EAAOW,IAAIC,SAASF,EAASO,EAAgB,OAE9D,UACOjB,EAAOK,UAAUQ,GAAGW,KAAKD,E,CAC9B,MACD,MAAME,EAAO,KAAMR,EAAgB,iCAC7BjB,EAAOK,UAAUQ,GAAGa,UAAUH,GAAU,IAAII,aAAcC,OAAOH,G,CAGxEzB,EAAOK,UAAUwB,iBAAiBN,GAChCO,MAAMC,IACN/B,EAAOQ,OAAOwB,iBAAiBD,EAAG,GAAG,GAAOD,MAAKG,OAC/C,GACD,IAGJrC,EAAQsC,cAAcC,KAAKpC,EAC5B,EAEA,wBAA8B,C","sources":["webpack://vscode-daily-note/external commonjs \"vscode\"","webpack://vscode-daily-note/webpack/bootstrap","webpack://vscode-daily-note/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport { fstat, open } from 'fs';\nimport * as vscode from 'vscode';\nimport { createInflate } from 'zlib';\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconsole.log('Congratulations, your extension \"vscode-daily-note\" is now active!');\n\n\t// todo add menu for activity bar\n\n\tlet disposable = vscode.commands.registerCommand('vscode-daily-note.create-dailynote', async () => {\n\t\tconst workspaceUri = vscode.workspace.workspaceFolders?.[0].uri;\n\t\tif (!workspaceUri) {\n\t\t\treturn vscode.window.showErrorMessage(\"No workspace. Please add folder\");\n\t\t}\n\n \t\tconst baseDir = vscode.Uri.joinPath(workspaceUri, \"notes\");\n\t\tvscode.workspace.fs.createDirectory(baseDir);\n\t\t\n\t\tconst date = new Date();\n\t\tconst formattedDate = [\n\t\t\tdate.getFullYear(),\n\t\t\t('0' + (date.getMonth() + 1)).slice(-2),\n\t\t\t('0' + date.getDate()).slice(-2)\n\t\t].join('-');\n\t\t\n\t\tconst notePath = vscode.Uri.joinPath(baseDir, formattedDate + \".md\");\n\n\t\ttry {\n\t\t\tawait vscode.workspace.fs.stat(notePath);\n\t\t} catch {\n\t\t\tconst text = '# '+ formattedDate + \"\\n\\n## 今日の学び\\n\\n## タスクメモ\"\n\t\t\tawait vscode.workspace.fs.writeFile(notePath, new TextEncoder().encode(text));\n\t\t}\n\t\t\n\t\tvscode.workspace.openTextDocument(notePath)\n\t\t\t.then((a: vscode.TextDocument) => {\n\t\t\t\tvscode.window.showTextDocument(a, 1, false).then(e => {\n\t\t\t\t});\n\t\t\t});\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","console","log","disposable","vscode","commands","registerCommand","async","workspaceUri","workspace","workspaceFolders","uri","window","showErrorMessage","baseDir","Uri","joinPath","fs","createDirectory","date","Date","formattedDate","getFullYear","getMonth","slice","getDate","join","notePath","stat","text","writeFile","TextEncoder","encode","openTextDocument","then","a","showTextDocument","e","subscriptions","push"],"sourceRoot":""}